

== 3.0.4 ============================

(Versioning has now dropped the 4th digit.)

- When serializing sequences, module data that is for non-existant modules is now discarded.
- Display preview update increased to 50ms from 10ms. Not currently customizable.
- Scheduler improvements to cache programs and prerender all sequences.
- updated OpenDMX controller module.
- Administrative cleanups of projects, namespaces, public repository, etc.
- Fixed up a potential crash in the Chase effect.
- Added Generic Serial controller module. (macebobo)
- Added a Candy Cane shape to the display preview (alphageek)
- Removed the "Generate Channels" button from the controller form; it encouraged bad configuration.



== 3.0.3.1 ============================

VIX-135: Locking the instance collection in ReleaseContexts when clearing it.

VIX-111, VIX-138: Making the data directory portable.

VIX-133: Color Filter mapping now working and copy does not work.

Fixed bug where updating chained filters may throw a null reference on startup.

VIX-138: Better null handling in the channel manager for a lookup.

Updated the audio media module to support variable speeds.

Updated TimedSequenceEditor to support changing the speed of the timing source, when the timing source supports it.

Changed where IsRunning is being set to true in SequenceExecutor.cs so that the media will have been started by that time.

ColorBreakdown Filter: added extra template options from forum requests (RGxB, and GRBW).

Filter & Patching setup form: Added a "high quality rendering" checkbox. Doesn't make much difference, but might help on high shape counts.

VixenApplication: fixed issue when creating filters through the wizard where the module data wasn't being duplicated properly.

Added DimmingCurve post filter.

Added OpenDMX module, care of chilloutdocdoc and piense on the DIYC forums. (thanks guys)

DisplayPreview: added error handling for missing background images.

VixenApplication: improved load time for the filter setup form when there's *heaps* of shapes to draw.

VIX-137: DisplayPreview: better null handling on channel updates.

Twinkle: don't make data for channels that have already had data generated for.

Chase: Fixed error with rendering, potentially throwing an exception.

Timeline Control Grid: fixed a few rendering issues/hangs/etc. Pretty messy and hacky, but I think it's time for a control rewrite next year. This at least stops the hangs.

Chase: render more finely, to pick up quick chases.

Twinkle: added another color option to spread the color across the subchannels.

TimedSequenceEditor: added negative time support in the mark manager.

TimelineControl Grid: dodgy hack to avoid any unhandled hangs from the drawing problems. Temporary fix.

ColorGradients & Curves: added extra shortcut keys to editors, and persist the library selector window size/position.

TimedSequenceEditor: add support for editing multiple elements at once (only of the same type).

Curves: add null library check, to avoid potential nasty bug on shutdown: if the curves library module is closed before another module that is using it (eg dimming curve), it can barf pretty hard.

Added a "data_dir" command-line argument for overriding the root data directory and moved data loading to before the initialization of the framework.
Use:
  data_dir=c:\path\where\you\want\data
  data_dir="c:\path where you want data"
Notes:
1. The VixenApplication app will default back to the default data directory if it cannot find its data file within this path.
2. This path is *the* data path for both the application and the framework.  This means that if it's a new path for the framework, it's going to build out its directory hierarchy.
3. Do not put spaces around the equals sign!  If the data directory path does have spaces, you can put quotes around the path, but around the path ONLY.  Example:  data_dir="c:\vixen data"



== 3.0.3.0 ============================

Preview improvements and fixes.

E1.31 module included.  Untested, but claimed to work.

"Simple" scheduler module included.  Sequence execution tested, program management and execution not tested.  Still subject to future changes.

Lots of fixes to the timed sequence editor.

Lots of fixes to the channel config form.

Interpolator precision fix.

LightingValue now makes use of the alpha channel.


== 3.0.2.2 ============================

Fix for loading a sequence from a non-qualified file path.

Moved user script initialization outside of the script's execution thread so that execution is considered "started" when Play is actually called.

Minor fixes to error handling and null-checking when stopping the system with a busted config.

Fixed issue when loading Preview modules: was looking for the wrong attributes.

When playing from an effect buffer, reset the last read/write counters when starting fresh.

Fixed sequence data sort issue.

Audio waveform visual in the timed sequence editor.


== 3.0.2.1 ============================

Added dataflow component circular dependency checking.

Added naming templates and generators.

Module store serialization fixes.

Refactoring of system file migration.

A plethora of patching UI fixes.

Fixes for SetLevel effect.

Timed sequence-type fixes.

Timed sequence serialization fixes.

The beginning of a patching wizard...feel free to provide feedback.


== 3.0.2.0 ============================

Data handling changes.  HUGE!
See http://doityourselfchristmas.com/forums/showthread.php?22100-September-2012-3-0-2-0

New configuration dialog in the admin app to accommodate filters and data flow.

Output device refactoring.  They are mostly internal, but there are some external changes.  All modules in the git repo have been updated.

Added a ValueTypes common assembly for commonly-used types of data, such as percentages and file paths.  This is to prevent modules from redefining similar kinds of data in different ways and having to create editors specifically for themselves.  An editor for any of these common types (there are only two so far) can be used for any effect that uses that type.

Added an Index member to outputs.  This is set when the output is instantiated and is not modifiable.

Added VixenSystem.Filters for the new filter layer.

Added VixenSystem.DataFlow for managing the data flow from channel to output through the filter layer.

Added VixenSystem.OutputControllers, VixenSystem.SmartOutputControllers, and VixenSystem.Previews for specific handling of those device types.

Added VixenSystem.ControllerManagement and VixenSystem.OutputDeviceManagement for generalized handling of those device types.  This allows for operations such as VixenSystem.ControllerManagement.StartAll() which affects both OutputControllers and SmartOutputControllers.

Previews now receive intent states instead of commands.

Added non-static data store to ModuleStore.xml.

System-level module data (such as for controllers) has been pulled out of SystemConfig.xml and put into ModuleStore.xml.

Fixed CPU usage statistic in the admin app.




== 3.0.1.8 ============================

Handling BadImageFormatException explicitly to allow non-assembly DLLs to reside in the module directories.
Moved some non-assembly libraries to the application root directory because that's where they have to be to work.


********************
******************** Modules have been split from the core source repository at this point.
********************


== 3.0.1.7 ============================

Changes for sequence and language modules.


== 3.0.1.6 ============================

How come there hasn't been an update in so long?  Well...


Removed the "Runtime Behavior" module type.  They will be doing their phoenix impression at a later date.

The "Sequence" module type is now the "SequenceType" module type.  This is a significant change, so it's detailed below.  * THIS IS A BREAKING CHANGE. *

New SequenceContext and some changes to how execution contexts are requested and fulfilled.

Slightly revamped data sourcing model for contexts.

Existing timed and script sequence types have been reimplemented as modules.

Expansion of service classes to better serve up core services through Vixen.Services. :)
(Okay, okay...this is the start of a consolidation effort to put all available consumer services in one easy-to-find place.)



* Sequence => Sequence Type Module Change: *

This removes any concrete definition of a sequence from the core assembly and puts it entirely into modules.  The core assembly defines a sequence interface, as well as other interfaces necessary to the sequence type module, but there is no sequence class defined.  That's the job of the module.  This means:

GOOD: Sequences can be defined more freely now, within certain limits defined by the interface (e.g. still have to work with effect data, sequence filters).

MAYBE SCARY: The module is now responsible for everything having to do with that sequence type.

Since the module now defines the sequence class, it also needs to define several other things:

1. How that sequence will be stored.

The sequence-type module's data class will be used to define how a sequence will be stored.  There is a base class to handle the mundane members of the ISequence interface, but it's up to the module to extend it to define any additional members.

2. How older sequence files of that type will be brought up to date.

Versioning is a requirement of all files.  When a sequence is opened and it's not of the latest version, the module needs to handle bringing it up through intervening versions to make that sequence current.

3. The biggy: How the sequence is executed.

It's through this that everything is told that a sequence is starting, that it's ended, what rules its timing...everything.

NOTE:
Like we said, it may be weeks between updates because of large-granular changes like this that are pretty core changes.  Not that we aim to do core changes at this point, but a conceived real-life use demanded that it be attempted.


== 3.0.1.5 ============================

Brought back effect preview rendering in the editor, but only for effects that use LightingValue commands.  So far, that's all of the ones that are in the package.


== 3.0.1.4 ============================

Added abstraction for output device update signaling.


== 3.0.1.3 ============================

Removed Write() from Vixen.Execution.  Replaced it with a formalized "live" context available by calling VixenSystem.Contexts.GetSystemLiveContext().


== 3.0.1.2 ============================

Changed the data directory to "Vixen 3" to avoid clashing with 2.x.
Removed TestPreview.dll from the build.


== 3.0.1.1 ============================

Spin and twinkle effect updates so they will work with the new changes.



