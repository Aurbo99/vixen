<Window xmlns:local="clr-namespace:VixenModules.App.CustomPropEditor"
        x:Class="VixenModules.App.CustomPropEditor.View.CustomPropEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:VixenModules.App.CustomPropEditor.View"
        xmlns:controls="clr-namespace:VixenModules.App.CustomPropEditor.Controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:adorners="clr-namespace:VixenModules.App.CustomPropEditor.Adorners"
        xmlns:vm="clr-namespace:VixenModules.App.CustomPropEditor.ViewModel"
        xmlns:controls1="clr-namespace:Common.WPFCommon.Controls;assembly=WPFCommon"
        xmlns:model="clr-namespace:VixenModules.App.CustomPropEditor.Model"
        Title="Custom Prop Editor" Height="600" Width="800">
    <!--<views:PropEditorView></views:PropEditorView>-->


    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Themes\GroupBox.xaml"/>
                <!--<ResourceDictionary Source="..\Themes\Generic.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <ContextMenu x:Key="DesignerCanvasContextMenu">
                <MenuItem Header="Paste" Command="{x:Static ApplicationCommands.Paste}">
                    <!--<MenuItem.Icon>
                    <Image Source="Resources/Images/Paste.png" Width="16"/>
                </MenuItem.Icon>-->
                </MenuItem>
                <MenuItem Header="Select All"/>
            </ContextMenu>

            

        </ResourceDictionary>

        

    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <ei:CallMethodAction TargetObject="{Binding}" MethodName="LoadProp"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New" Command="{Binding NewPropCommand}"></MenuItem>
                <MenuItem Header="Open"></MenuItem>
                <MenuItem Header="Save"></MenuItem>
                <MenuItem Header="Save As"></MenuItem>
                <MenuItem Header="Import xModel" Command="{Binding ImportCommand}" CommandParameter="xModel"></MenuItem>
            </MenuItem>
            <MenuItem Header="Edit" />
            <MenuItem Header="View" />
            <MenuItem Header="Help" />
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=Coordinates.X, StringFormat='{}{0:0}', ElementName=PropDesigner}"/>
                    <TextBlock Text=", "></TextBlock>
                    <TextBlock Text="{Binding Path=Coordinates.Y, StringFormat='{}{0:0}', ElementName=PropDesigner}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <Border BorderThickness="0 0 0 1" >

        
        <Grid Background="#444444">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <views:ElementTree Grid.Column="0" Grid.Row="0"/>

            
                <Grid Grid.Column="0" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <!--<Label Grid.Column="0" Grid.Row="0" Content="Name"/>
                <TextBox x:Name="Name" Grid.Column="1" Grid.Row="0" Text="{Binding SelectedItem.Name}" />
                <Label Grid.Column="0" Grid.Row="1" Content="Is String"/>
                <TextBox x:Name="IsString" Grid.Column="1" Grid.Row="1" Text="{Binding SelectedItem.IsString, Mode=OneWay}" />
                <Label Grid.Column="0" Grid.Row="2" Content="Light Count"/>
                <TextBox x:Name="LightCount" Grid.Column="1" Grid.Row="2" Text="{Binding SelectedItem.LightCount, Mode=OneWay}"/>
                <Label Grid.Column="0" Grid.Row="3" Content="Order"/>
                <TextBox x:Name="Order" Grid.Column="1" Grid.Row="3" Text="{Binding SelectedItem.Order}"/>-->

                <!--<Label Grid.Column="0" Grid.Row="0" Content="FOV"/>
                <TextBox x:Name="Name" Grid.Column="1" Grid.Row="0" Text="{Binding Camera.FieldOfView}" />
                <Label Grid.Column="0" Grid.Row="1" Content="Position"/>
                <TextBox x:Name="IsString" Grid.Column="1" Grid.Row="1" Text="{Binding Camera.Position, Mode=OneWay}" />
                <Label Grid.Column="0" Grid.Row="2" Content="Look At"/>
                <TextBox x:Name="LightCount" Grid.Column="1" Grid.Row="2" Text="{Binding Camera.LookDirection, Mode=OneWay}"/>
                <Label Grid.Column="0" Grid.Row="3" Content="Up Direction"/>
                <TextBox x:Name="Order" Grid.Column="1" Grid.Row="3" Text="{Binding Camera.UpDirection}"/>-->
            </Grid>

            <!--<GroupBox Header="Prop Diagram" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" >-->
                <DockPanel Grid.Column="1" Grid.Row="0">
                <ToolBarTray DockPanel.Dock="Top">
                    <ToolBar>
                        <ToggleButton IsChecked="{Binding DrawingPanelViewModel.IsDrawing}" ToolTip="Enable draw mode">
                            <Image Source="/CustomPropEditor;component/Images/buttonSelect.png" Height="16"/>
                        </ToggleButton>
                        
                        <Separator />
                        <Button Command="Copy" ToolTip="Cut">
                                <Image Source="/CustomPropEditor;component/Images/cut.png" Height="16"/>
                        </Button>
                        <Button Command="Paste" ToolTip="Copy">
                                <Image Source="/CustomPropEditor;component/Images/copy.png" Height="16"/>
                            </Button>
                        <Button Command="Paste" ToolTip="Paste">
                                <Image Source="/CustomPropEditor;component/Images/paste.png" Height="16"/>
                            </Button>
                        <Separator />
                            <Button Command="{Binding DrawingPanelViewModel.AlignLeftCommand}" ToolTip="Align Left">
                                <Image Source="/CustomPropEditor;component/Images/buttonAlignLeft.png" Height="16"/>
                        </Button>
                            <Button Command="{Binding DrawingPanelViewModel.AlignRightCommand}" ToolTip="Align Right">
                                <Image Source="/CustomPropEditor;component/Images/buttonAlignRight.png" Height="16"/>
                        </Button>
                            <Button Command="{Binding DrawingPanelViewModel.AlignTopsCommand}" ToolTip="Align Top">
                            <Image Source="/CustomPropEditor;component/Images/buttonAlignTop.png" Height="16"/>
                        </Button>
                            <Button Command="{Binding DrawingPanelViewModel.AlignBottomsCommand}" ToolTip="Align Bottom">
                            <Image Source="/CustomPropEditor;component/Images/buttonAlignBottom.png" Height="16"/>
                        </Button>
                            <Button Command="{Binding DrawingPanelViewModel.DistributeHorizontallyCommand}" ToolTip="Distribute Horizontal">
                                <Image Source="/CustomPropEditor;component/Images/buttonDistributeHorizontal.png" Height="16"/>
                        </Button>
                            <Button Command="{Binding DrawingPanelViewModel.DistributeVerticallyCommand}" ToolTip="Distribute Vertical">
                                <Image Source="/CustomPropEditor;component/Images/buttonDistributeVertical.png" Height="16"/>
                        </Button>
                        </ToolBar>
                </ToolBarTray>
                    <ScrollViewer  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <!--<controls:PropDesignerCanvas Height="{Binding Prop.Height}" Width="{Binding Prop.Width}"
                                                     LightNodeViewModelsSource="{Binding DrawingPanelViewModel.LightNodes}">
                            <i:Interaction.Behaviors>
                                <vm:MultiSelectionBehavior SelectedItems="{Binding DrawingPanelViewModel.SelectedItems}" />
                            </i:Interaction.Behaviors>
                        </controls:PropDesignerCanvas>-->
                    <controls:PropDesigner x:Name="PropDesigner"
                        LightNodeViewModelsSource="{Binding DrawingPanelViewModel.LightNodes}"
                        TransformCommand="{Binding DrawingPanelViewModel.TransformCommand}">
                        <i:Interaction.Behaviors>
                                <vm:MultiSelectionBehavior SelectedItems="{Binding DrawingPanelViewModel.SelectedItems}" />
                        </i:Interaction.Behaviors>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <Path StrokeThickness="1" Name="GeometryPath">
                                            <Path.Data >
                                                <EllipseGeometry Center="{Binding Center}" RadiusX="{Binding Size}" RadiusY="{Binding Size}"></EllipseGeometry>
                                            </Path.Data>
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="White"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                            <Setter Property="Fill" Value="Yellow"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>

                                            </Path.Style>
                                        </Path> 
                                    </ContentControl>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas Background="Black" x:Name="DrawingCanvas" 
                                            Height="{Binding Prop.Height}" Width="{Binding Prop.Width}" Margin="10">

                                    </Canvas>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </controls:PropDesigner>

                    </ScrollViewer>

                </DockPanel>
                <!--</GroupBox>-->

            <GridSplitter Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
        </Grid>
        </Border>
    </DockPanel>
</Window>

